@model Core.Model.Element

@{
    var procent = (decimal)Model.Item.IncomingTaxGroup.Tax / 100 + 1;
    var val = Model.Item.IncomingPrice;
    var price = val / procent;
}
<tr>
    @Html.HiddenFor(model => model.Invoice_ID, new { htmlAttributes = new { @required = "required" } })
    @Html.HiddenFor(model => model.Item.ID)
    @Html.HiddenFor(model => model.Item.Product.ID)
    @Html.HiddenFor(model => model.Item.Product.ProductGroup.ID, new { htmlAttributes = new { @required = "required" } })
    @Html.HiddenFor(model => model.Item.IncomingTaxGroup.ID, new { htmlAttributes = new {  @required = "required" } })
    <td>@Html.EditorFor(model => model.Item.SerNumber, new { htmlAttributes = new { @class = "form-control" } })</td>
    <td>@Html.EditorFor(model => model.Item.Product.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })</td>
    <td>@Html.EditorFor(model => model.Item.Product.Barcode, new { htmlAttributes = new { @class = "form-control", @required = "required" } })</td>
    <td><input class="form-control" name="Price" required="required" step="0.01" type="number" value="@price"/></td>
    <td>@Html.EditorFor(model => model.Item.IncomingTaxGroup.Name, new { htmlAttributes = new { @class = "form-control", @list = "TaxGroups", @required = "required" } })</td>
    <td>@Html.EditorFor(model => model.Item.IncomingPrice, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "number", @min = "0", @step = "0.01", @value = "0" } })</td>
    <td>@Html.EditorFor(model => model.Item.Product.ProductGroup.Name, new { htmlAttributes = new { @class = "form-control", @list = "ProductGroups", @required = "required" } })</td>
    <td><input class="btn btn-block" type="button" value="Delete" title="This button removes item, action can be canceled by clicking button again."></td>
</tr>