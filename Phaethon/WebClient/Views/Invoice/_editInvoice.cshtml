@model Core.Model.Invoice
@using LanguagePack = WebClient.Resources.Language_Files.LanguagePack;

<div class="row">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.Incoming)

    <div class="col-sm">
        <div class="form-group">
            <div class="col-form-label col-md-12">@LanguagePack.DocumentNumber</div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.DocNumber, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.DocNumber, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="col-sm">
        <div class="form-group">
            <div class="col-form-label col-md-12">@LanguagePack.CheckoutDate</div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.CheckoutDate, new { htmlAttributes = new { @class = "form-control date-picker", @required = "required", onkeydown = "return false", onpaste = "return false" } })
                @Html.ValidationMessageFor(model => model.CheckoutDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="col-sm">
        <div class="form-group">
            <div class="col-form-label col-md-12">@LanguagePack.ReceptionDate</div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.ReceptionDate, new { htmlAttributes = new { @class = "form-control date-picker", @required = "required", onkeydown = "return false", onpaste = "return false" } })
                @Html.ValidationMessageFor(model => model.ReceptionDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>