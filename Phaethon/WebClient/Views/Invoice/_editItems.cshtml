@using Core.Model
@model Core.Model.Invoice

<table class="table">
    <thead>
    @{
        Item item = new Item();
        <tr>
            <th>
                @Html.DisplayNameFor(model => item.Product.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => item.Product.Barcode)
            </th>
            <th>
                @Html.DisplayNameFor(model => item.SerNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => item.Product.ProductGroup.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => item.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => item.Product.ProductGroup.Tax)
            </th>
            <th>
                Sum
            </th>
            <th>
                Action
            </th>
        </tr>
    }
    </thead>
    <tbody>
        @if (Model.Elements != null)
        {
            
            foreach (Element element in Model.Elements)
            {
                //<td>@Html.TextBox("element[" + id + "]_Invoice_ID", element.Invoice_ID, new { @readonly = "readonly", @type = "hidden" })</td>
                //<input data-val="true" data-val-number="The field Invoice_ID must be a number." data-val-required="The Invoice_ID field is required." id="element_Invoice_ID" name="element.Invoice_ID" type="hidden" value="1">
                <tr>
                    @Html.HiddenFor(model => element.Invoice_ID)
                    @Html.HiddenFor(model => element.Item_ID)
                    <td>
                        <div class="form-group">
                            @Html.LabelFor(model => element.Item.Product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => element.Item.Product.Name, new { htmlAttributes = new { @class = "form-control", @list = "ReceiverRepresentatives", @required = "required" } })
                                <datalist id="ReceiverRepresentatives"></datalist>
                                @Html.ValidationMessageFor(model => element.Item.Product.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor(model => element.Item.Product.Barcode, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => element.Item.Product.Barcode, new { htmlAttributes = new { @class = "form-control", @list = "ReceiverRepresentatives", @required = "required" } })
                                <datalist id="ReceiverRepresentatives"></datalist>
                                @Html.ValidationMessageFor(model => element.Item.Product.Barcode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor(model => element.Item.SerNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => element.Item.SerNumber, new { htmlAttributes = new { @class = "form-control", @list = "ReceiverRepresentatives", @required = "required" } })
                                <datalist id="ReceiverRepresentatives"></datalist>
                                @Html.ValidationMessageFor(model => element.Item.SerNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor(model => element.Item.Product.ProductGroup.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => element.Item.Product.ProductGroup.Name, new { htmlAttributes = new { @class = "form-control", @list = "ReceiverRepresentatives", @required = "required" } })
                                <datalist id="ReceiverRepresentatives"></datalist>
                                @Html.ValidationMessageFor(model => element.Item.Product.ProductGroup.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor(model => element.Item.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => element.Item.Price, new { htmlAttributes = new { @class = "form-control", @list = "ReceiverRepresentatives", @required = "required" } })
                                <datalist id="ReceiverRepresentatives"></datalist>
                                @Html.ValidationMessageFor(model => element.Item.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor(model => element.Item.Product.ProductGroup.Tax, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => element.Item.Product.ProductGroup.Tax, new { htmlAttributes = new { @class = "form-control", @list = "ReceiverRepresentatives", @required = "required" } })
                                <datalist id="ReceiverRepresentatives"></datalist>
                                @Html.ValidationMessageFor(model => element.Item.Product.ProductGroup.Tax, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <input type="text" class="form-control" value="0" />
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "Delete", new { id = element.Item.ID })
                    </td>
                </tr>
            }
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="6"></td>
            <td>
                <input type="text" class="form-control" value="0" />
            </td>
            <td colspan="6">
                <input type="button" class="btn btn-success" value="Add new item"/>
            </td>
        </tr>
    </tfoot>
</table>
