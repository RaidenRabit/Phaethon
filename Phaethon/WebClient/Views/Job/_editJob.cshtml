@using Core.Model
@model Core.Model.Job

<div class="form-group">
    <hr/>
    <strong>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.JobName, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JobName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.JobName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartedTime, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartedTime, new { htmlAttributes = new { @class = "form-control date-picker", @required = "required", onkeydown = "return false", onpaste = "return false" } })
                    @Html.ValidationMessageFor(model => model.StartedTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FinishedTime, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FinishedTime, new { htmlAttributes = new { @class = "form-control date-picker", @required = "required", onkeydown = "return false", onpaste = "return false" } })
                    @Html.ValidationMessageFor(model => model.FinishedTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @step = "0.01", @value = "0", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.JobStatus, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JobStatus, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.JobStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </strong>
</div>
